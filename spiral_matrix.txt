**Given a matrix of m * n elements (m rows, n columns), return all elements of the matrix in spiral order.**


vector<int> Solution::spiralOrder(const vector<vector<int> > &A) {
    vector<int> res;
    int t=0,b,l=0,r,dir=0;
    int rows=A.size();
    int cols=A[0].size();
    
    b=rows-1;
    r=cols-1;
   LOOP: while(b<=t && l<=r){
        if(dir==0){
            for(int i=l;i<=r;i++){
                res.push_back(A[t][i]);
               
            }
             t++;
             dir=1;
             goto LOOP;
        }
        else if(dir==1){
            for(int i=t;i<=b;i++){
                res.push_back(A[i][r]);
                
                
            }
            r--;
            dir=2;
            goto LOOP;
        }
        else if(dir==2){
            for(int i=r;i>=l;i--){
                res.push_back(A[b][i]);
                
                
            }
            b--;
            dir=3;
            goto LOOP;
        }
        else if(dir==3){
            for(int i=b;i>=t;i--){
                res.push_back(A[i][l]);
                         
            }
            l++;
            dir=0;
            goto LOOP;
        }
       
    }
    return res;
}